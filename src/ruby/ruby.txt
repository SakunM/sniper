スナイパードメインのRubyによる実装			A:\PJ\sniper\src\ruby\ruby.txt


こちらでも、コーディング規約を読み直す。とファイル名はすべて小文字で連結にはマイナスを使うみたいだ
Rubyはシングルクォードとダブルクォードを厳密に区別する。
シングルクォードの中のシーケンス文字はそのままその文字として処理されるがダブルクォードの場合はシーケンス処理を行う。
つまり改行で切り分ける処理を文字列のsplitメソッドで行う時ダブルクォードで\nを囲わないとおかしな事になる。
Rubyでの文字列の置き換えは、gsubで、ここでもシーケンス文字を渡すときはダブルクォードで囲う事。

Rubyのテスト戦略も、時代とともに変化しているけど、当時は　text/unit で、モックは flexmock/test_unitだ。
ついでに、自前のテストモジュールも少し改良。テストが通らない時のメッセージは詳細に複数行に渡っても良いけど。
通るときは、一行にまとめたい。
PythonもRubyも文字列にスライス構文があるので、テストが通るときの結果は、一行に収まるように切り詰めた。





スナイパーファイナル　　			A:\PJ\sniper\Sniper.txt
実装中に気付いた事　　			A:\PJ\sniper\hint.txt
今回の最終形				 	A:\PJ\mamo2\langs\groovy\prjs\books\ant
現在の作業フォルダ　			A:\PJ\sniper
スナイパードメインのJavaScriptによる実装		A:\PJ\sniper\src\js\js.txt
スナイパードメインのPythonによる実装			A:\PJ\sniper\src\python\python.txt
スナイパードメインのRubyによる実装			A:\PJ\sniper\src\ruby\ruby.txt
スナイパードメインのHaskellによる実装		A:\PJ\sniper\src\haskell\heskell.txt
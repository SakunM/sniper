スナイパードメインのPythonによる実装			A:\PJ\sniper\src\python\python.txt

せっかく、久しぶりにPythonに触れるので、パイソニアンになって見ようと思う（笑）。
なんだか、モジュール名やファイル名はスネークケースを使うみたいなので、テストファイルの名前はsniper_test.pyとする。

2017年当時のPythonでは、公式ライブラリとしてはunittestとmockが有る。今回モックの機能を確かめたくて。
TranslatorにSniperを渡して、Translatorの実装内部でSniperのメソッドを呼び出す戦略にした。

プロダクトコードは、
if __name__ == "__main__":
  # test()
  # refactor()
  # develop()
  product()
4つのメソッドをコメントアウトで切り替える戦略で、自前のテストモジュールも用意してファイルからの読み込みテストも行う。
また、テストコードに持ち込むほどではない、ヘルパー関数はtest()で軽く確認しながら実装する。
二つのクラスの大枠ができたらtestフォルダで本格的なテストを始める。新しいテストが通るまでその他のテストはパスする戦略は、
始めに、skip = True として　@unittest.skipIf(skip,"新しいテストが通るまでね")　で行うとこのデコレートが無い新しいテストだけが
走る寸法だ、そしてskip = False　とすれば、すべてのテストができる。ちなみにPythonでは＠はデコレートと呼び。
Javaのアノテーションとは少し違う。テストコードの名前は結構大事だ
兄弟パッケージからのインポートはpath.appendを使ったりめんどくさいのでsrcフォルダにプロダクトコードを置いてその下に
utilフォルダを配置した。そして、自前のテストメソッドは、テストが通った場合は一行で表すようにした。



スナイパーファイナル　　			A:\PJ\sniper\Sniper.txt
実装中に気付いた事　　			A:\PJ\sniper\hint.txt
今回の最終形				 	A:\PJ\mamo2\langs\groovy\prjs\books\ant
現在の作業フォルダ　			A:\PJ\sniper
